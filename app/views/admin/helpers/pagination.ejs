<% paginationHelper=(pagination, linkPrefix, currentStatus, keyword)=> {
    let currentPage = pagination.currentPage
    let pageRanges = pagination.pageRanges
    let totalItems = pagination.totalItems
    let totalItemsPerPage = pagination.totalItemsPerPage

    let totalPages = Math.ceil(totalItems / totalItemsPerPage)
    let from = totalItemsPerPage * (currentPage - 1) + 1
    let to = totalItemsPerPage * currentPage
    if(to > totalItems) to = totalItems

    let xhtmlPagination = ''

    if(totalPages > 1) {
        let link = `${linkPrefix}status/${currentStatus}?`
        if(keyword) link += `keyword=${keyword}&`
        let xhtmlStart = '<li class="disabled"><a>Start</a></li>'
        let xhtmlPrevious = '<li class="disabled"><a>Previous</a></li>'
        let xhtmlPages = ''
        let xhtmlNext = `<li><a href="${link}page=${currentPage+1}">Next</a></li>`
        let xhtmlEnd = `<li><a href="${link}page=${totalPages}">End</a></li>`

        if(currentPage > 1) {
            xhtmlStart = `<li><a href="${link}page=1">Start</a></li>`
            xhtmlPrevious = `<li><a href="${link}page=${currentPage-1}">Previous</a></li>`
        }

        if(currentPage >= totalPages) {
            xhtmlEnd='<li class="disabled"><a>End</a></li>'
            xhtmlNext='<li class="disabled"><a>Next</a></li>'
        }

        let middle = Math.ceil(pageRanges / 2)
        let min = currentPage - middle + 1
        let max = min + pageRanges - 1

        if(min <= 1) {
            min = 1
            max = pageRanges
        }

        if(max >= totalPages) {
            max = totalPages
            min = ((max - pageRanges + 1) <= 1) ? 1 : max - pageRanges + 1
        }

        for(let page = min; page <= max; page++ ) { 
            if(page == currentPage) {
                xhtmlPages +=`<li class="active"><a>${page}</a></li>`
            } else {
                xhtmlPages +=`<li><a href="${link}page=${page}">${page}</a></li>`
            }
        }


            xhtmlPagination='<ul class="pagination text-center">' +
                                xhtmlStart + xhtmlPrevious + xhtmlPages + xhtmlNext +
                                xhtmlEnd + '</ul>'
    }

    return `
        <div class="panel panel-info" id="pagination">
            <div class="panel-heading">
                Pagination
                <span class="label label-warning">Total pages: ${totalPages}</span>
                <span class="label label-danger">Total entries: ${totalItems}</span>
            </div>
            <div class="panel-body">
                <div class="infor-pagination">
                    <p>Number of elements on the page: <span>${totalItemsPerPage}</span></p>
                    <p>Showing <span> ${from} </span> to <span>${to}</span> of <span>${totalItems}</span> entries</p>
                </div>
                <div class="ad-pagination">
                    ${xhtmlPagination}
                </div>
            </div>
        </div>`
    }
    %>